@model JournalControlWebApp.Models.ViewModel.EventListViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<form method="get" asp-action="Index">
    <div class="form-inline">
        <input name="query" value="@Model.FilterViewModel.QueryString" class="form-control" />
        <label class="control-label">Проверяемое подразделение</label>
        <select id="Subunit" name="subunit" class="form-control" asp-items="Model.FilterViewModel.Subunits" onchange="GetSectors()"></select>
        <label class="control-label">Проверяемый участок</label>
        <select id="Sector" name="sector" class="form-control"></select>
        <input type="submit" value="Поиск" class="btn btn-outline-primary" />
    </div>
</form>
@if (User.IsInRole("DEVEL"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.FailCountSort"
                   asp-route-query="@Model.FilterViewModel.QueryString">
                    Номер несоответствия
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.CheckSubunitSort"
                   asp-route-query="@Model.FilterViewModel.QueryString">
                    Проверяемое подразделение
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.CheckSectorSort"
                   asp-route-query="@Model.FilterViewModel.QueryString">
                    Проверяемый участок
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.FailDescriptionSort"
                   asp-route-query="@Model.FilterViewModel.QueryString">
                    Результат контроля
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.EventDescriptionSort"
                   asp-route-query="@Model.FilterViewModel.QueryString">
                    Описание мероприятия
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.ResponseWorkerSort"
                   asp-route-query="@Model.FilterViewModel.QueryString">
                    ФИО ответственного
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.DueDateSort"
                   asp-route-query="@Model.FilterViewModel.QueryString">
                    Срок исполнения
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.DeveloperSubunitSort"
                   asp-route-query="@Model.FilterViewModel.QueryString">
                    Подразделение разработчика
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.DeveloperSort"
                   asp-route-query="@Model.FilterViewModel.QueryString">
                    ФИО разработчика
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.ReportSort"
                   asp-route-query="@Model.FilterViewModel.QueryString">
                    Отчет
                </a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Events)
        {
            string FIO = item.DeveloperNavigation.Family + " " + item.DeveloperNavigation.Name + "." + item.DeveloperNavigation.Otch + ".";
            string date = item.DueDate.ToShortDateString();
            <tr data-href="/Events/Details?id=@item.Id">
                <td>
                    @Html.DisplayFor(modelItem => item.Check.FailCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Check.Sector.Subunit.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Check.Sector.SectorName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Check.FailDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ResponsWorker)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeveloperNavigation.Sector.Subunit.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => FIO)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Report)
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       asp-route-query="@Model.FilterViewModel.QueryString"
       asp-route-sortOrder="@Model.SortViewModel.Current"
       asp-route-subunit="@Model.FilterViewModel.SelectedSubunit"
       asp-route-sector="@Model.FilterViewModel.SelectedSector"
       class="btn btn-outline-dark">
        <i class="glyphicon glyphicon-chevron-left"></i>
    </a>
}
@for (var i = 1; i <= Model.PageViewModel.TotalPages; ++i)
{
    @if (i == Model.PageViewModel.PageNumber)
    {
        <a asp-action="Index"
           asp-route-page="@i"
           asp-route-query="@Model.FilterViewModel.QueryString"
           asp-route-sortOrder="@Model.SortViewModel.Current"
           asp-route-subunit="@Model.FilterViewModel.SelectedSubunit"
           asp-route-sector="@Model.FilterViewModel.SelectedSector"
           class="btn btn-outline-info">
            @i
        </a>
    }
    else
    {
        <a asp-action="Index"
           asp-route-page="@i"
           asp-route-query="@Model.FilterViewModel.QueryString"
           asp-route-sortOrder="@Model.SortViewModel.Current"
           asp-route-subunit="@Model.FilterViewModel.SelectedSubunit"
           asp-route-sector="@Model.FilterViewModel.SelectedSector"
           class="btn btn-outline-dark">
            @i
        </a>
    }
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       asp-route-query="@Model.FilterViewModel.QueryString"
       asp-route-sortOrder="@Model.SortViewModel.Current"
       asp-route-subunit="@Model.FilterViewModel.SelectedSubunit"
       asp-route-sector="@Model.FilterViewModel.SelectedSector"
       class="btn btn-outline-dark">
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function GetSectors() {
            var selectSubunit = document.getElementById("Subunit");
            var selectSector = document.getElementById("Sector");
            while (selectSector.firstChild) {
                selectSector.removeChild(selectSector.firstChild);
            }
            var option = selectSubunit.options[selectSubunit.selectedIndex];
            @foreach (var sec in Model.FilterViewModel.Sectors)
            {
                <text>
                    var SubunitId = '@sec.SubunitId';
                    var Id = '@sec.Id';
                    var SectorName = @Html.Raw(Json.Serialize(sec.SectorName));
                    if (SubunitId == option.value || Id == 0) {
                        var newOpt = document.createElement("option");
                        newOpt.value = Id;
                        newOpt.text = SectorName;
                        selectSector.appendChild(newOpt);
                    }
                </text>
            }
    }
    GetSectors();
    var selectSector = document.getElementById("Sector");
    for (var i = 0; i < selectSector.options.length; ++i) {
        if (selectSector.options[i].value == "@Model.FilterViewModel.SelectedSector") {
            selectSector.options[i].selected = true;
            break;
        }
        }

        $('*[data-href]').on('click', function () {
            window.location = $(this).data('href');
            return false;
        });
        $('tr[data-href]').hover(function () {
            $(this).addClass('hover');
        }, function () {
                $(this).removeClass('hover');
        })
    </script>
}